name: Rust
extensions:
  - rs

# Note to self: add comments for each rule

syntax:
  keywords:
    - match: '\b(?:as|fn|impl|match|move|mut|ref|return|unsafe|use|where)\b'
      scope: keywords.normal
    - match: '\b(?:break|continue|for|if|else|in|loop|while)\b'
      scope: keywords.control-flow
    - match: '\b(?:pub|extern|priv)\b'
      scope: keywords.visibility
    - match: '\b(?:mod|crate|super)\b'
      scope: keywords.module
    - match: '\b(?:let|const|mut|enum|static|struct|trait|type)\b'
      scope: keywords.storage
    - match: '(?:(?<=\s)|^)(?:self|Self|async|await|dyn|''static)(?=\s|$)'
      scope: keywords.special
    - match: '\b(?:abstract|become|box|do|in|macro|override|typeof|unsized|virtual|yield|try)\b'
      scope: keywords.reserved
  punctuation:
    - match: '(?:\[|\])'
      scope: punctuation.square-brackets
    - match: '(?:\(|\))'
      scope: punctuation.parens
    - match: '(?:\{|\})'
      scope: punctuation.curly
    - match: '(?:\<|\>)'
      scope: punctuation.angle
    - match: '(?:\||)'
      scope: punctuation.pipe
    - match: '(?:\\|)'
      scope: punctuation.backslash
    - match: '(?:\/|)'
      scope: punctuation.forward-slash
    - match: '(?:\&|)'
      scope: punctuation.ampersand
    - match: '(?:\!|)'
      scope: punctuation.bang
    - match: '(?:\+|)'
      scope: punctuation.plus
    - match: '(?:\-|)'
      scope: punctuation.minus
    - match: '(?:\*|)'
      scope: punctuation.asterisk
    - match: '(?:\%|)'
      scope: punctuation.modulus
  data:
    - match: '(?:\")'
      scope: data.string
    - match: '(?:\'')'
      scope: data.char
    - match: '\b(?:\d+)\b'
      scope: data.integer
    - match: '\b(?:\d+\.\d+)\b'
      scope: data.float
    - match: '\b(?:0x[0-9A-Fa-f]+)\b'
      scope: data.hex
    - match: '\b(?:0b[01]+)\b'
      scope: data.binary
